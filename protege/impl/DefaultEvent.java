package servlet.impl;

import servlet.*;


import java.net.URI;
import java.util.Collection;
import javax.xml.datatype.XMLGregorianCalendar;

import org.protege.owl.codegeneration.WrappedIndividual;
import org.protege.owl.codegeneration.impl.WrappedIndividualImpl;

import org.protege.owl.codegeneration.inference.CodeGenerationInference;

import org.semanticweb.owlapi.model.IRI;
import org.semanticweb.owlapi.model.OWLOntology;


/**
 * Generated by Protege (http://protege.stanford.edu).<br>
 * Source Class: DefaultEvent <br>
 * @version generated on Thu Jun 21 13:30:55 JST 2018 by nurulfirdaus
 */
public class DefaultEvent extends WrappedIndividualImpl implements Event {

    public DefaultEvent(CodeGenerationInference inference, IRI iri) {
        super(inference, iri);
    }





    /* ***************************************************
     * Object Property http://purl.org/NET/c4dm/event.owl#hasFactor
     */
     
    public Collection<? extends WrappedIndividual> getHasFactor() {
        return getDelegate().getPropertyValues(getOwlIndividual(),
                                               Vocabulary.OBJECT_PROPERTY_HASFACTOR,
                                               WrappedIndividualImpl.class);
    }

    public boolean hasHasFactor() {
	   return !getHasFactor().isEmpty();
    }

    public void addHasFactor(WrappedIndividual newHasFactor) {
        getDelegate().addPropertyValue(getOwlIndividual(),
                                       Vocabulary.OBJECT_PROPERTY_HASFACTOR,
                                       newHasFactor);
    }

    public void removeHasFactor(WrappedIndividual oldHasFactor) {
        getDelegate().removePropertyValue(getOwlIndividual(),
                                          Vocabulary.OBJECT_PROPERTY_HASFACTOR,
                                          oldHasFactor);
    }


}
